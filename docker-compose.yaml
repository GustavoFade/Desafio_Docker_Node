version: '3'

services:

  nginx:
    container_name: nginx
    build: 
      context: node/nginx
      dockerfile: Dockerfile
    networks:
      - desafio_node_network
    tty: true
    ports:
      - 80:80
    depends_on:
      app_node:
        condition: service_started
      database:
        condition: service_healthy

  app_node:
    container_name: node
    build: 
      context: node
      dockerfile: DockerFile.node
    volumes:
      - ./node/src:/home/node/app/src
    networks:
      - desafio_node_network
    entrypoint: ["sh", "-c", "npm install && npx sequelize-cli db:migrate && node index.js"]
    tty: true
    environment:
      - DB_NAME=sequelizenode
      - DB_USER=root
      - DB_PASSWORD=12345678
      - DB_HOST=db-mysql
    depends_on:
      database:
        condition: service_healthy

  database:
    container_name: db-mysql
    build: 
      context: ./node/mysql
      dockerfile: Dockerfile.mysql
    networks:
      - desafio_node_network
    environment:
      - MYSQL_ROOT_PASSWORD=12345678
      - MYSQL_DATABASE=sequelizenode
    restart: always
    healthcheck:
      test: ["CMD", "mysql" ,"-u", "root", "-p12345678", "sequelizenode"]
      interval: 15s
      timeout: 15s
      retries: 15
      start_period: 25s
    volumes:
      - ./mysql:/var/lib/mysql

networks:
  desafio_node_network:
    driver: bridge